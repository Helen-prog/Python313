*.jpg (jpeg)
*.png
*.gif

left | center | right | top | bottom

file:///D:/Python313/HTML/form/file.php?first-name=gfgfgh&psw=gfghfg
file:///D:/Python313/HTML/form/form.html?first-name=fdfgd&psw=#file.php


file:///D:/Python313/HTML/form/form.html?first-name=Olga&psw=123456#file.php
file:///D:/Python313/HTML/form/form.html#file.php


Shift + Alt + F
file:///D:/Python313/JS/index.html?name1=Hello#text.php


Win + R => cmd
python
py

1.py

print("Hello World!")

quit()


IDLE

import keyword
keyword.kwlist



0-9

ворона - 1

вороны - 2 3 4

ворон - 5 6 7 8 9 0

Система контроля версий (Version Control Systems, VCS) — это система, сохраняющая изменения в одном или нескольких файлах так, чтобы потом можно было восстановить определённые старые версии.

git --version
git --help

git init 
- создание репозитория (применяют один раз для одного репозитория)

git status
- проверка статуса репозитория (в каком состоянии репозиторий)

git add -A
		-A, --all - все файлы, которые находятся в папке и во свех подпапках
		main.py - один файл
		. - все файлы из текущей директории


git config --global user.name 'new_user'
git config --global user.name

git config --global user.email 'test@mail.ru'
git config --global user.email

git commit -m "first commit"
- создание конторольной точки

text.txt
folder
	test.txt

.gitignore

git branch
- просмотр веток

git branch test
- создали ветку

git branch -D test
- удаление ветки


git branch readme

git checkout readme
- перейти на ветку readme


readme.md
git checkout master


master	 ->		readme
				readme.md
				
git merge readme
- слияние ветки readme с веткой master				

git branch -D readme

git log
- история коммитов


токен

Win + R => control

https://github.com
имя_пользователя
токен

git remote add origin https://github.com/Helen-prog/Python313.git
git push -u origin master

ceb3bafab983bc38d9bb392a09675cb6e8beecb7

1) git add .
2) git commit -m "added print"
3) git push

git clone https://github.com/Helen-prog/Python313.git

git pull
- забираем изменения с удаленного репозитория в локальный


test.txt


свойства (поля, переменные)
	- статическе
	- динамические
методы (функции)
	- экземпляра класса (self)
	- статические ()
	- класса (cls)

Модификаторы доступа
public -      name
protected -  _name
private -   __name


5! = 1 * 2 * 3 * 4 * 5 = 120

main.py

Модули
Пакеты

geometry
	rect.py
	sq.py
	trian.py
	
import sys
sys.path

math

car
	__init__.py
	carclass.py
	electrocar.py
	
Упоковка данных

сериализация 
десериализация


1. marshal (*.pyc)
2. pickle
3. json

dump() - сохраняет данные в открытый файл
dumps() - сохраняет данные в строку

load() - cчитывает данные из файла
loads() - cчитывает данные из строки


{
  {
    "name": "ffgggae",
    "tel": "0703526611"
  },
  {
    "name": "fefacea",
    "tel": "5895717390"
  }
}

{
	"ГК Python": {
		"Nikolaenko": [2, 3, 5, 4, 2],
		"Bodnya": [5, 4, 3, 4, 5, 3]
	}
	"ГК Web": {
		"Birukov": [3, 5, 3, 2, 5, 4]
	}
}

data = {
	"ГК Python":{
		"Nikolaenko": [2, 3, 5, 4, 2],
		"Bodnya": [5, 4, 3, 4, 5, 3]
	}
}

stud_list = {
	"Nikolaenko": [2, 3, 5, 4, 2],
	"Bodnya": [5, 4, 3, 4, 5, 3]
}

pip install requests

(venv)


data.csv

Имя,Профессия,Год рождения
Виктор,Веб-дизайнер,1995
Игорь,Программист,1983

csv.reader() - []
csv.DictReader() - {}

csv.writer() - []
csv.DictWriter() - {}


pip install beautifulsoup4 или bs4

pip install lxml

https://ru.wordpress.org/plugins/browse/blocks/page/1/
https://ru.wordpress.org/plugins/browse/blocks/page/2/
https://ru.wordpress.org/plugins/browse/blocks/page/3/

https://ru.wordpress.org/plugins/browse/blocks/page/24/


MVC (Model View Controller)
Модель Представление Контроллер 

• Модель — этот компонент отвечает за данные, а также определяет структуру
приложения. Например, если вы создаете To-Do приложение, код компонента model
будет определять список задач и отдельные задачи.
• Представление — этот компонент отвечает за взаимодействие с пользователем. То есть
код компонента view определяет внешний вид приложения и способы его
использования.
• Контроллер — этот компонент отвечает за связь между model и view. Код компонента
controller определяет, как сайт реагирует на действия пользователя. По сути, это мозг
MVC-приложения.





